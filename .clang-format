# Experimental.
#
# This configuration attempts to match Xapian coding conventions but it's
# currently a work-in-progress.
#
# It should be used in conjunction with
# xapian-maintainer-tools/run-clang-format (which undoes some unhelpful
# changes) and the results should be manually checked before committing.
---
Language:        Cpp
AccessModifierOffset: -2
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: DontAlign
AlignOperands: true
AlignTrailingComments: false
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
# FIXME: InlineOnly supported by newer clang-format
AllowShortFunctionsOnASingleLine: Inline
# Traditional Xapian style is that this is OK for simple statements, but
# clang-format's option aggressively reformats any statement short enough to
# fit on the same line.  Given we have to choose, let's go for not allowing
# this ever - if nothing else, it makes it much clearer if the branch is ever
# taken in code coverage reports.
AllowShortIfStatementsOnASingleLine: false
# Traditional Xapian style is that this is OK for simple statements, but
# clang-format's option aggressively reformats any statement short enough to
# fit on the same line.  Given we have to choose, let's go for not allowing
# this ever - if nothing else, it makes it much clearer if the branch is ever
# taken in code coverage reports.
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: TopLevelDefinitions
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: true
BinPackArguments: false
BinPackParameters: false
BraceWrapping:
  AfterClass:      false
  AfterControlStatement: false
  AfterEnum:       false
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  BeforeCatch:     false
  BeforeElse:      false
  IndentBraces:    false
  # Needs > clang-format 3.8, and seems to default to true.
  # SplitEmptyFunctionBody: true
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: false
BreakConstructorInitializersBeforeComma: false
BreakStringLiterals: true
ColumnLimit:     80
# Don't wrap copyright statements in comments.
CommentPragmas:  '^ Copyright '
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: false
DerivePointerAlignment: false
DisableFormat:   false
ExperimentalAutoDetectBinPacking: false
ForEachMacros:   [ foreach, BOOST_FOREACH ]
# FIXME: We should consider this.
FixNamespaceComments: false
#IncludeCategories:
#  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
#    Priority:        2
#  - Regex:           '^(<|"(gtest|isl|json)/)'
#    Priority:        3
#  - Regex:           '.*'
#    Priority:        1
IndentCaseLabels: true
IndentWidth:     4
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: false
Language: Cpp
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
ObjCBlockIndentWidth: 4
ObjCSpaceAfterProperty: true
ObjCSpaceBeforeProtocolList: true
# FIXME: These may benefit from tuning.
PenaltyBreakAssignment: 1
PenaltyBreakBeforeFirstCallParameter: 10000
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 0
# We haven't historically really had a standard here, so go with what seems
# conventional in C++ code.
PointerAlignment: Left
ReflowComments:  false
# FIXME: Sort out configuration for sorting includes.
SortIncludes:    false
# FIXME: Only supported by newer clang-format
#SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false
# External API headers should be Cpp03, at least for now.
Standard:        Cpp11
TabWidth:        8
UseTab:          ForContinuationAndIndentation
...
