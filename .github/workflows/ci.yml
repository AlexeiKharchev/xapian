name: CI

on:
  push:
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'
  pull_request:
    branches: master
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Emscripten:
    runs-on: 'ubuntu-20.04'
    services:
      emscripten:
        image: emscripten/emsdk
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: Emscripten
    - name: Use Node.js
      uses: actions/setup-node@v2
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-pygments
    - name: bootstrap source tree
      # Bootstrap only xapian-core for emscripten build.
      run: |
        ./bootstrap xapian-core
        ./configure CC='ccache gcc' CXX='ccache g++' CXXFLAGS=-O0
        make -j2
        make -j2 distclean
    - name: configure
      run: |
        docker run -v "$GITHUB_WORKSPACE:/src" -w /src/xapian-core emscripten/emsdk emconfigure ./configure CPPFLAGS='-DFLINTLOCK_USE_FLOCK' CXXFLAGS='-Oz -s USE_ZLIB=1 -fno-rtti' --disable-shared
    - name: make
      run: |
        docker run -v "$GITHUB_WORKSPACE:/src" -w /src/xapian-core emscripten/emsdk emmake make
    - name: Run tests
      run: |
        docker run -v "$GITHUB_WORKSPACE:/src" -w /src/xapian-core emscripten/emsdk em++ -Oz -s USE_ZLIB=1 -std=c++11 -s WASM=1 -Iinclude emscripten/xapianjstest.cc .libs/libxapian-1.5.a -o emscripten/xapianjstest.js
        cd xapian-core/emscripten && node xapianjstest.js
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: |
        find . -name '*.wasm' -delete
        git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  mingw64-i686:
    runs-on: 'ubuntu-22.04'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: mingw64-i686
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            mingw-w64-i686-dev \
            binutils-mingw-w64-i686 \
            libz-mingw-w64-dev \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-pygments
    - name: bootstrap source tree
      # Bootstrap only xapian-core
      run: |
        ./bootstrap xapian-core
        ./configure CC='ccache gcc' CXX='ccache g++' CXXFLAGS=-O0
        make -j2
        make -j2 distclean
    - name: configure
      run: ./configure --host i686-w64-mingw32
    - name: make
      run: make
    - name: Run tests
      # FIXME: Run tests under wine?
      run: echo No tests currently
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  mingw64-x86-64:
    runs-on: 'ubuntu-22.04'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: mingw64-x86-64
    - name: Install package dependencies
      run: |
        sudo apt-get update
        sudo apt-get install \
            mingw-w64-x86-64-dev \
            binutils-mingw-w64-x86-64 \
            libz-mingw-w64-dev \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-pygments
    - name: bootstrap source tree
      # Bootstrap only xapian-core
      run: |
        ./bootstrap xapian-core
        ./configure CC='ccache gcc' CXX='ccache g++' CXXFLAGS=-O0
        make -j2
        make -j2 distclean
    - name: configure
      run: ./configure --host x86_64-w64-mingw32
    - name: make
      run: make
    - name: Run tests
      # FIXME: Run tests under wine?
      run: echo No tests currently
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true

  checkpatch:
    name: 'Automated run of xapian-check-patch'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: "Automated run of xapian-check-patch"
      # Run the style checking script, checking changes between the common
      # ancestor of the target branch of the PR (or master if this isn't a PR)
      # and the revision being checked.
      run: |
        echo "GITHUB_BASE_REF='$GITHUB_BASE_REF'"
        git diff ${GITHUB_BASE_REF:-origin/master}.. --|xapian-maintainer-tools/xapian-check-patch
