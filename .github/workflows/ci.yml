name: CI

on:
  push:
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'
  pull_request:
    branches: master
    paths-ignore:
      - '.appveyor.yml'
      - NEWS
      - 'xapian-maintainer-tools/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Test with the oldest clang version we easily can.
  clang6:
    runs-on: 'ubuntu-20.04'
    env:
      LIBEXTRACTOR_PREFIX: '/usr/lib/x86_64-linux-gnu/libextractor'
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
    - name: Install CCache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: clang6
    - name: Install package dependencies
      run: |
        env
        sudo apt-get update
        apt-cache pkgnames 'libc++'
        sudo apt-get install \
            clang-6.0
        sudo apt-get install \
            doxygen \
            graphviz \
            help2man \
            python3-docutils \
            pngcrush \
            python3-sphinx \
            uuid-dev \
            libpcre2-dev \
            libmagic-dev \
            python3-dev \
            tcl \
            tcl-dev \
            pkg-config \
            libpoppler-glib-dev \
            libglib2.0-dev \
            libe-book-dev \
            libetonyek-dev \
            libgepub-0.6-dev \
            libgmime-2.6-dev \
            libarchive-dev \
            libabw-dev \
            libcdr-dev \
            libextractor-dev \
            libmwaw-dev \
            libtesseract-dev \
            tesseract-ocr-eng
            # libreoffice support doesn't work when compiled with clang on Linux
    - name: bootstrap source tree
      run: ./bootstrap xapian-core xapian-applications/omega swig xapian-bindings xapian-letor
    - name: configure
      run: ./configure CC='ccache clang-6.0' CXX='ccache clang++-6.0' --with-python3 --with-tcl
    - name: make
      run: make -j2
    - name: Run tests
      run: make -j2 check VERBOSE=1 AUTOMATED_TESTING=1
    - name: Check generated files are in .gitignore
      # grep '^' passes through all input while giving a non-zero exit status
      # if that input is empty.
      run: git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
