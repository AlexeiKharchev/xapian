dist: xenial
language: cpp
cache: ccache
notifications:
  irc: "chat.freenode.net#xapian-devel"
matrix:
  include:
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - lua5.3
            - liblua5.3-dev
            - mono-devel
            - python-dev
            - python3-dev
            - tcl
            - gcc-4.7
            - g++-4.7
      # Perform a build with GCC 4.7 which is the oldest GCC we aim to support
      # for 1.4.x.
      #
      # The PHP bindings fail to compile because they assume compiler builtins
      # which were available in the compiler used to build PHP are available
      # when building code using the PHP C API, so just disable them.
      env: USE_CC=gcc-4.7 USE_CXX=g++-4.7 confargs='--without-php7'
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ondrej/php'
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - lua5.3
            - liblua5.3-dev
            - mono-devel
            - php5.6-cli
            - php5.6-dev
            - python-dev
            - python3-dev
            - tcl
      env: CPPFLAGS=-D_GLIBCXX_DEBUG
    - compiler: clang
      os: linux
      # Clang is already installed, but we want to build using the
      # llvm c++ library, not the GCC one. (Otherwise, depending on
      # the GCC version, there can be issues.)
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - tcl
            - libc++-dev
      env: USE_CC=clang USE_CXX='clang++ -stdlib=libc++'
    - compiler: gcc
      os: linux
      name: "GCC 4.8"
      dist: trusty
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
            - help2man
            - python-docutils
            - pngcrush
            - python-sphinx
            - uuid-dev
            - libpcre3-dev
            - libmagic-dev
            - lua5.2
            - liblua5.2-dev
            - mono-devel
            - python-dev
            - python3-dev
            - tcl
    - os: osx
      addons:
        homebrew:
          update: true
          packages:
            - ccache
            - doxygen
            - graphviz
            - help2man
            - libiconv
            - libmagic
            - lua
            - mono
            - pcre
            - pngcrush
            - python
            - python2
      before_install:
        - travis_retry pip2 install sphinx docutils
        - travis_retry pip3 install sphinx
      install:
        # Enable use of ccache to speed up builds.
        - export PATH=/usr/local/opt/ccache/libexec:$PATH
      # The default macOS make behaves oddly when the -j option is used
      # (probably rules get run in a single subshell) so use GNU make instead.
      env: PYTHON2=/usr/local/bin/python2 confargs='--prefix=/Users/travis/XapianInstall --with-libiconv-prefix=/usr/local/opt/libiconv' installcore='make -C xapian-core install'
    - name: "Automated run of xapian-check-patch"
      os: linux
      # Override "before_script" to do nothing
      before_script:
      # Override "script" to run the style checking script
      # "xapian-check-patch":
      # * for a PR, CI is run on the PR branch merged with the target branch,
      #   so just check the diff from the target branch to that merged branch.
      # * Otherwise we check changes between the common ancestor of master and
      #   the branch and the revision being checked.
      script:
        - git diff `[ "$TRAVIS_PULL_REQUEST" = false ] && echo master... || echo "$TRAVIS_BRANCH.."`|xapian-maintainer-tools/xapian-check-patch
  allow_failures:
    # Travis' osx setup seems to be broken currently.
    - os: osx


before_script:
  # Bootstrap everything, then configure using our chosen compiler.
  - travis_retry ./bootstrap
  - ./configure $confargs CC="$USE_CC" CXX="$USE_CXX"
script:
  - make -j2
  - $installcore
  - make -j2 check VERBOSE=1 AUTOMATED_TESTING=1
  # grep '^' passes through all input while giving a non-zero exit status if
  # that input is empty.
  - git status --porcelain|grep '^' && { echo "The generated files listed above are not in .gitignore" ; exit 1; }; true
